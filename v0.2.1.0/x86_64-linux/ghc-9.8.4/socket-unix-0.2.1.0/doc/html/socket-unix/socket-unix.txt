-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A Unix domain socket extension for the socket library
@package socket-unix
@version 0.2.1.0


module System.Socket.Family.Unix

-- | The <a>Unix domain socket</a>
data Unix

-- | The <a>SocketAddress</a> type is a <a>data family</a>. This allows to
--   provide different data constructors depending on the socket family
--   without knowing all of them in advance or the need to extend this core
--   library.
--   
--   <pre>
--   SocketAddressInet  inetLoopback  8080     :: SocketAddress Inet
--   SocketAddressInet6 inet6Loopback 8080 0 0 :: SocketAddress Inet6
--   </pre>
data family SocketAddress f

-- | The <a>SocketAddress</a> type is a <a>data family</a>. This allows to
--   provide different data constructors depending on the socket family
--   without knowing all of them in advance or the need to extend this core
--   library.
--   
--   <pre>
--   SocketAddressInet  inetLoopback  8080     :: SocketAddress Inet
--   SocketAddressInet6 inet6Loopback 8080 0 0 :: SocketAddress Inet6
--   </pre>
data family SocketAddress f

-- | Creates address which is connected to a filesystem pathname. Returns
--   Nothing if <tt>path</tt>'s length exceeds maximal supported.
socketAddressUnixPath :: ByteString -> Maybe (SocketAddress Unix)

-- | Creates address with name in abstract namespace. Returns Nothing if
--   <tt>path</tt>'s length exceeds maximal supported.
socketAddressUnixAbstract :: ByteString -> Maybe (SocketAddress Unix)

-- | Returns filesystem pathname where address is connected to.
getUnixPath :: SocketAddress Unix -> Maybe ByteString

-- | <pre>
--   SocketException "No such file or directory"
--   </pre>
eNoEntry :: SocketException
